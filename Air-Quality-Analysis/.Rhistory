title = 'Carbon Mono-oxide Levels by State',
geo = g
)
})
output$plot5 <- renderD3tree2({
if(input$slider5 == 2000){
partMatter <- partMatter1
} else if(input$slider5 == 2004){
partMatter <- partMatter2
}else if(input$slider5 == 2008){
partMatter <- partMatter3
}else if(input$slider5 == 2012){
partMatter <- partMatter4
} else{
partMatter <- partMatter5
}
d3tree2(treemap(partMatter,index=c("County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
position.legend = "none"),
rootname = "County",height = "100%",width = "100%")
})
}
runApp(list(ui = ui, server = server),host="127.0.0.1",port=5013, launch.browser = TRUE)
View(ozone1)
ozone1 <- filter(ozone1,Arithmetic.Mean > mean(ozone1$Arithmetic.Mean))
View(s02_4)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(plotly)
library(treemap)
library(data.tree)
library(d3treeR)
source('analysis.R')
source('analysis.R')
library(shiny); source('analysis.R')
library(plotly)
library(tidyverse)
library(lubridate)
histDF16 <- filter(data5,Parameter.Code == 44201 | Parameter.Code ==42401 | Parameter.Code ==42101 | Parameter.Code ==42602 |
Parameter.Code == 88101 | Parameter.Code == 81102)
mymonths <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
histDF16$month <- month(histDF16$X1st.Max.DateTime)
mymonths <- factor(mymonths,levels = mymonths)
histDF16$month <- mymonths[ histDF16$month ]
plot16 <- ggplot(data = histDF16) +
geom_bar(mapping = aes(x = month , fill = Parameter.Name), position = "fill")
plot16 <- plot16 + labs(title = "Percentage of Each Pollutant in Each Month",
y = "Precentage",
x = "Months",colour = "Pollutant")
ggplotly(plot16)
View(stn02_1)
View(n02_1)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(plotly)
library(treemap)
library(data.tree)
library(d3treeR)
library(xts)
library(raster)
library(sp)
library(lubridate)
source('analysis.R')
source('analysis.R')
source('analysis.R')
source('analysis.R')
histDF08 <- filter(data3,Parameter.Code == 44201 | Parameter.Code ==42401 | Parameter.Code ==42101 | Parameter.Code ==42602 |
Parameter.Code == 88101 | Parameter.Code == 81102)
histDF08$month <- month(histDF08$X1st.Max.DateTime)
histDF08$month <- mymonths[ histDF08$month ]
plot08 <- ggplot(data = histDF08) +
geom_bar(mapping = aes(x = month , fill = Parameter.Name), position = "fill")
plot08 <- plot08 + labs(title = "Percentage of Each Pollutant in Each Month",
y = "Precentage",
x = "Months",colour = "Pollutant")
ggplotly(plot08)
plot16 <- ggplot(data = histDF16) +
geom_bar(mapping = aes(x = month , fill = Parameter.Name), position = "fill") +
labs(title = "Percentage of Each Pollutant in Each Month",
y = "Precentage",
x = "Months",colour = "Pollutant")
source('analysis.R')
(ggplotly(data = histDF16) +
geom_bar(mapping = aes(x = month , fill = Parameter.Name), position = "fill") +
labs(title = "Percentage of Each Pollutant in Each Month",
y = "Precentage",
x = "Months",colour = "Pollutant"))
(ggplot(data = histDF16) +
geom_bar(mapping = aes(x = month , fill = Parameter.Name), position = "fill") +
labs(title = "Percentage of Each Pollutant in Each Month",
y = "Precentage",
x = "Months",colour = "Pollutant"))
(plot_ly(data = histDF16) +
geom_bar(mapping = aes(x = month , fill = Parameter.Name), position = "fill") +
labs(title = "Percentage of Each Pollutant in Each Month",
y = "Precentage",
x = "Months",colour = "Pollutant"))
source('analysis.R')
d3tree2(treemap(MO,index=c("State.Name,County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
position.legend = "none"),
rootname = "County",height = "100%",width = "100%")
d3tree2(treemap(MO1,index=c("State.Name,County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
position.legend = "none"),
rootname = "County",height = "100%",width = "100%")
View(MO1)
d3tree2(treemap(MO1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
position.legend = "none"),
rootname = "County",height = "100%",width = "100%")
d3tree2(treemap(MO1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
position.legend = "none"),
rootname = "County",height = "100%",width = "100%")
partMatter1 <- filter(subData1,Parameter.Name == c("PM2.5 - Local Conditions"),Pollutant.Standard == c("PM25 24-hour 2013"))
d3tree2(treemap(partMatter1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
position.legend = "none"),
rootname = "County",height = "100%",width = "100%")
d3tree2(treemap(partMatter1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
position.legend = "none"),
rootname = "County")
source('analysis.R')
source('analysis.R')
install.packages("plotGoogleMaps")
source('analysis.R')
source('analysis.R')
library(tidyverse)
library(shiny)
library(shinydashboard)
library(plotly)
library(treemap)
library(data.tree)
library(d3treeR)
library(raster)
library(sp)
library(lubridate)
source('analysis.R')
library(treemap)
library(data.tree)
library(d3treeR)
library(raster)
library(sp)
library(lubridate)
d3tree2(treemap(partMatter1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6),
rootname = "*")
d3tree2(treemap(partMatter,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,29), mapping = c(1,15,29),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,29), mapping = c(1,15,29),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,29), mapping = c(1,10,29),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,29), mapping = c(1,20,29),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,29), mapping = c(9,18,27),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,29), mapping = c(9,18,27),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,29), mapping = c(9,23,27),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,29), mapping = c(9,18,27),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter5,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,29), mapping = c(9,18,27),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter5,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,30), mapping = c(9,18,27),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter5,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,30), mapping = c(9,18,29),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter5,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,30), mapping = c(9,15,29),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter5,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,30), mapping = c(9,23,29),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,30), mapping = c(9,23,29),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,30), mapping = c(9,18,29),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,30), mapping = c(9,18,27),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
range = c(1,30), mapping = c(7,12,27),
position.legend = "none"),
rootname = "*")
d3tree2(treemap(partMatter1,index=c("State.Name","County.Name","City.Name"),
vSize = "Arithmetic.Mean",
type = "value", palette = "YlOrRd",
fontsize.title = 8,fontsize.labels = 6,
position.legend = "none"),
rootname = "*")
yrAv1 <- rbind(stateData1,stOzone1)
yrAv1 <- merge(stateData1,stOzone1,by.x=c("PM2.5Levels"),by.y = c("OzoneLevels"))
View(yrAv1)
tmp <- stateData1
View(partMatter1)
View(stateData1)
names(tmp1) <- c("State.Name","Level","Hover")
tmp1 <- stateData1
names(tmp1) <- c("State.Name","Level","Hover")
tmp2 <- stOzone1
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat1 <- rbind(tmp1,tmp2)
View(yrAvDat1)
tmp1 <- stateData1
names(tmp1) <- c("State.Name","Level","Hover")
tmp2 <- stOzone1
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat1 <- rbind(tmp1,tmp2)
tmp2 <- sts02_1
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat1 <- rbind(yrAvDat1,tmp2)
tmp2 <- stn02_1
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat1 <- rbind(yrAvDat1,tmp2)
tmp2 <- stMO1
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat1 <- rbind(yrAvDat1,tmp2)
View(yrAvDat1)
yrAvDat1 <- aggregate(yrAvDat1[, c("Level")],list(yrAvDat1$State.Name), mean)
tmp1 <- stateData1
names(tmp1) <- c("State.Name","Level","Hover")
tmp2 <- stOzone1
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat1 <- rbind(tmp1,tmp2)
tmp2 <- sts02_1
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat1 <- rbind(yrAvDat1,tmp2)
tmp2 <- stn02_1
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat1 <- rbind(yrAvDat1,tmp2)
tmp2 <- stMO1
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat1 <- rbind(yrAvDat1,tmp2)
yrAvDat1 <- aggregate(yrAvDat1[, c("Level")],list(yrAvDat1$State.Name), mean)
tmp1 <- stateData2
names(tmp1) <- c("State.Name","Level","Hover")
tmp2 <- stOzone2
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat2 <- rbind(tmp1,tmp2)
tmp2 <- sts02_2
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat2 <- rbind(yrAvDat2,tmp2)
tmp2 <- stn02_2
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat2 <- rbind(yrAvDat2,tmp2)
tmp2 <- stMO2
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat2 <- rbind(yrAvDat2,tmp2)
yrAvDat2 <- aggregate(yrAvDat2[, c("Level")],list(yrAvDat2$State.Name), mean)
View(yrAvDat2)
View(yrAvDat1)
tmp1 <- stateData3
names(tmp1) <- c("State.Name","Level","Hover")
tmp2 <- stOzone3
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat3 <- rbind(tmp1,tmp2)
tmp2 <- sts02_3
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat3 <- rbind(yrAvDat3,tmp2)
tmp2 <- stn02_3
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat3 <- rbind(yrAvDat3,tmp2)
tmp2 <- stMO3
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat3 <- rbind(yrAvDat3,tmp2)
yrAvDat3 <- aggregate(yrAvDat3[, c("Level")],list(yrAvDat3$State.Name), mean)
View(yrAvDat3)
tmp1 <- stateData4
names(tmp1) <- c("State.Name","Level","Hover")
tmp2 <- stOzone4
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat4 <- rbind(tmp1,tmp2)
tmp2 <- sts02_4
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat4 <- rbind(yrAvDat4,tmp2)
tmp2 <- stn02_4
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat4 <- rbind(yrAvDat4,tmp2)
tmp2 <- stMO4
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat4 <- rbind(yrAvDat4,tmp2)
yrAvDat4 <- aggregate(yrAvDat4[, c("Level")],list(yrAvDat4$State.Name), mean)
View(yrAvDat4)
tmp1 <- stateData5
names(tmp1) <- c("State.Name","Level","Hover")
tmp2 <- stOzone5
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat5 <- rbind(tmp1,tmp2)
tmp2 <- sts02_5
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat5 <- rbind(yrAvDat5,tmp2)
tmp2 <- stn02_5
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat5 <- rbind(yrAvDat5,tmp2)
tmp2 <- stMO5
names(tmp2) <- c("State.Name","Level","Hover")
yrAvDat5 <- rbind(yrAvDat5,tmp2)
yrAvDat5 <- aggregate(yrAvDat5[, c("Level")],list(yrAvDat5$State.Name), mean)
View(yrAvDat5)
plot_geo(yrAvDat1, locationmode = 'USA-states') %>%
add_trace(
z = Levels,  locations = ~State.Name,
color = ~Levels, colors = 'YlOrRd'
) %>%
colorbar(title = "Pollutation Levels") %>%
layout(
title = 'Pollution Level',
geo = g
)
library(tidyverse)
library(plotly)
library(plotly)
plot_geo(yrAvDat1, locationmode = 'USA-states') %>%
add_trace(
z = Levels,  locations = ~State.Name,
color = ~Levels, colors = 'YlOrRd'
) %>%
colorbar(title = "Pollutation Levels") %>%
layout(
title = 'Pollution Level',
geo = g
)
View(yrAvDat1)
plot_geo(yrAvDat1, locationmode = 'USA-states') %>%
add_trace(
z = x,  locations = ~Group.1,
color = ~x, colors = 'YlOrRd'
) %>%
colorbar(title = "Pollutation Levels") %>%
layout(
title = 'Pollution Level',
geo = g
)
plot_geo(yrAvDat1, locationmode = 'USA-states') %>%
add_trace(
z = ~x,  locations = ~Group.1,
color = ~x, colors = 'YlOrRd'
) %>%
colorbar(title = "Pollutation Levels") %>%
layout(
title = 'Pollution Level',
geo = g
)
plot_geo(yrAvDat2, locationmode = 'USA-states') %>%
add_trace(
z = ~x,  locations = ~Group.1,
color = ~x, colors = 'YlOrRd'
) %>%
colorbar(title = "Pollutation Levels") %>%
layout(
title = 'Pollution Level',
geo = g
)
plot_geo(yrAvDat3, locationmode = 'USA-states') %>%
add_trace(
z = ~x,  locations = ~Group.1,
color = ~x, colors = 'YlOrRd'
) %>%
colorbar(title = "Pollutation Levels") %>%
layout(
title = 'Pollution Level',
geo = g
)
plot_geo(yrAvDat4, locationmode = 'USA-states') %>%
add_trace(
z = ~x,  locations = ~Group.1,
color = ~x, colors = 'YlOrRd'
) %>%
colorbar(title = "Pollutation Levels") %>%
layout(
title = 'Pollution Level',
geo = g
)
plot_geo(yrAvDat5, locationmode = 'USA-states') %>%
add_trace(
z = ~x,  locations = ~Group.1,
color = ~x, colors = 'YlOrRd'
) %>%
colorbar(title = "Pollutation Levels") %>%
layout(
title = 'Pollution Level',
geo = g
)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(plotly)
library(treemap)
library(data.tree)
library(d3treeR)
library(raster)
library(sp)
library(lubridate)
source('analysis.R')
source('analysis.R')
library(tidyverse)
library(shiny)
library(shinydashboard)
library(plotly)
library(treemap)
library(data.tree)
library(d3treeR)
source('analysis.R')
source('analysis.R')
